version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: db
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    env_file:
      - .env
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - db:/var/lib/mysql
    networks:
      - local
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - local
  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - local
#  slideshow-management:
#    build:
#      dockerfile: Dockerfile
#      context: .
#    ports:
#      - "8080:8080"
#    environment:
#      DB_URL: db
#      DB_PORT: 3306
#      DB_NAME: sm-db
#      DB_USER: sm-db-user
#      DB_PASSWORD: test
#      DB_SHOW_SQL: 'true'
#      KAFKA_CONNECT: localhost:9092
#    depends_on:
#      - db
#      - broker
#    networks:
#      - local

volumes:
  db:
networks:
  local:
    driver: bridge
